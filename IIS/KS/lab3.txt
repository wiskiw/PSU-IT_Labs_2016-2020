(defglobal ?*x* = 0)
(defglobal ?*res* = 0)
(defglobal ?*ans* = 0)

(deffunction qwe ( ?a ?b )
	(bind ?*res* (- (** 4 ?a) (* 10 (** 2 (- ?a 1))) 24))
	(printout t "res = " ?*res* crlf)
)


(defglobal ?*tmp* = 0)
(defglobal ?*celoe* = 0)
(defglobal ?*des* = 0)
(defglobal ?*i* = 10)
(deffunction asd ()
	( while (neq ?*i* 99)
		(bind ?*celoe* (div ?*i* 10))
		(bind ?*des* (mod ?*i* 10))
		(if (eq (* ?*celoe* ?*des*) (* 2 (+ ?*celoe* ?*des*)))
			then(printout t ?*i* crlf)
		)
		(bind ?*i* (+ ?*i* 1))
	)
)

(deffunction error (?a)
    (if (eq ?a 1)
        then (printout t "[ERORR] I don't understand you" crlf)
    )
    (if (eq ?a 2)
        then (printout t "[ERORR] Type of data is wrong" crlf)
    )
    (if (eq ?a 3)
        then (printout t "[ERORR] Answer is wrong" crlf)
    )
    
)

(defgeneric foo)

(defmethod foo ((?a STRING (eq (str-compare ?a "Hi") 0)))
    (if (stringp ?a)
        then
			(printout t "Hello!" crlf "How old are you? >>")
			(bind ?*ans* (read))
			(if (integerp ?*ans*)
				then    
					(foo ?*ans*)
				else (error 3)
			)
                
        else (error 2)
    ) 
)

(defmethod foo ((?a INTEGER) )
    (if (integerp ?a)
        then
            (if (>= ?a 18)
                then 
                    (printout t "You are an adult" crlf "What's your name? >>")
                    (bind ?*ans* (read))
                    (if (symbolp ?*ans*)
                        then    
                            (foo ?*ans*)
                        else (error 3)
                    )
                else (if(< ?a 18)
                    then 
                        (printout t "You are an young" crlf "What's your name? >>")
                        (bind ?*ans* (read))
                        (if (symbolp ?*ans*)
                            then    
                                (foo ?*ans*)
                            else (error 3)
                        )
                    else (error 1)
                )
            )
        else (error 2)
    ) 
)

(defmethod foo ((?a SYMBOL))
    (if (symbolp ?a)
        then
            (printout t "Nice to meet you, " ?a "!" crlf "What's your weight? >>")
            (bind ?*ans* (read))
			(if (floatp ?*ans*)
                then    
                    (foo ?*ans* ?a)
                else (error 3)
            )
        else 
            (error 2)
    ) 
)

(defmethod foo ((?a FLOAT) (?name SYMBOL))
    (if (floatp ?a)
        then
            (printout t "Good!" crlf "Ok," ?name ". I can fold or subtract numbers. Write them and I do it" crlf
			"What's your operation >>"
			)
			(bind ?sign (read))
            (printout t "Write numbers >>")
			(bind ?*ans* (read))
			(if (integerp ?*ans*)
                then    
                    (foo ?sign ?*ans*)
                else (error 3)
            )
        else 
            (error 2)
    ) 
)

(defmethod foo ((?sign SYMBOL) (?a INTEGER) (?b INTEGER))
	(if (eq ?sign plus)
		then (bind ?*ans* (+ ?a ?b))
		else (bind ?*ans* (- ?a ?b))
	)
	(printout t "ans = " ?*ans* crlf)
)