(deffunction задать-вопрос (?вопрос $?допустимые-значения)
	(printout t ?вопрос)
	(bind ?ответ (read))
	(if (lexemep ?ответ)
		then (bind ?ответ (lowcase ?ответ))
	)
	(while (not (member ?ответ ?допустимые-значения)) do
		(printout t ?вопрос)
		(bind ?ответ (read))
		(if (lexemep ?ответ)
			then (bind ?ответ (lowcase ?ответ))
		)
	)
	?ответ
)

(deftemplate таблица
	(slot металл)
	(slot твердость (default незнаю))
	(slot азот_кислота (default незнаю))
	(slot плотность (default незнаю))
	(slot плавление (default незнаю))
	(slot окисление (default незнаю))
	(slot тепло (default незнаю))
)

(deffacts металлы
	(таблица 
		(металл платина)
		(твердость нет)
		(азот_кислота нет)
		(плотность да)
		(плавление нет)
		(окисление да)
		(тепло нет)
	)
	(таблица 
		(металл серебро)
		(твердость нет)
		(азот_кислота да)
		(плотность нет)
		(плавление нет)
		(окисление нет)
		(тепло да)
	)
	(таблица
		(металл олово)
		(твердость да)
		(азот_кислота да)
		(плотность нет)
		(плавление да)
		(окисление нет)
		(тепло нет)
	)
	(таблица
		(металл аллюминий)
		(твердость нет)
		(азот_кислота да)
		(плотность нет)
		(плавление нет)
		(окисление да)
		(тепло да)
	)
	(таблица
		(металл свинец)
		(твердость да)
		(азот_кислота нет)
		(плотность да)
		(плавление да)
		(окисление да)
		(тепло нет)
	)
)

(defrule Start ""
	(declare (salience 0))
	(initial-fact)
	=>
	(set-strategy random)
	(printout t crlf crlf)
  	(printout t "Определение металла")
	(printout t crlf crlf)
  	(printout t "Возможне ответы на вопросы: да, нет, незнаю.")
	(printout t crlf crlf)
	(assert (решение нет))
)

(defrule Question1 ""
	(решение нет)
	(not (твердость ?))
	(таблица (металл ?x) (твердость ?z))
	(таблица (металл ?y&~?x) (твердость ?v&~?z))
	=>
	(bind ?p (задать-вопрос "Царапается ногтем? " да нет незнаю))
	(if (eq ?p да) then (assert (твердость нет)))
	(if (eq ?p нет) then (assert (твердость да)))
	(if (eq ?p незнаю) then (assert (твердость незнаю)))
)

(defrule Kontrol1
	(declare (salience 5))
	(твердость ?x)
	?p <- (таблица (твердость ?x))
	=>
	(retract ?p)
)

(defrule Question2 ""
	(решение нет)
	(not (азот_кислота ?))
	(таблица (металл ?x) (азот_кислота ?z))
	(таблица (металл ?y&~?x) (азот_кислота ?v&~?z))
	=>
	(bind ?p (задать-вопрос "Растворима в азотной кислоте? " да нет незнаю))
	(if (eq ?p да) then (assert (азот_кислота нет)))
	(if (eq ?p нет) then (assert (азот_кислота да)))
	(if (eq ?p незнаю) then (assert (азот_кислота незнаю)))
)

(defrule Kontrol2
	(declare (salience 5))
	(азот_кислота ?x)
	?p <- (таблица (азот_кислота ?x))
	=>
	(retract ?p)
)

(defrule Question3 ""
	(решение нет)
	(not (плотность ?))
	(таблица (металл ?x) (плотность ?z))
	(таблица (металл ?y&~?x) (плотность ?v&~?z))
	=>
	(bind ?p (задать-вопрос "Тяжелее железа? " да нет незнаю))
	(if (eq ?p да) then (assert (плотность нет)))
	(if (eq ?p нет) then (assert (плотность да)))
	(if (eq ?p незнаю) then (assert (плотность незнаю)))
)

(defrule Kontrol3
	(declare (salience 5))
	(плотность ?x)
	?p <- (таблица (плотность ?x))
	=>
	(retract ?p)
)

(defrule Question4 ""
	(решение нет)
	(not (плавление ?))
	(таблица (металл ?x) (плавление ?z))
	(таблица (металл ?y&~?x) (плавление ?v&~?z))
	=>
	(bind ?p (задать-вопрос "Плавится при 500*С? " да нет незнаю))
	(if (eq ?p да) then (assert (плавление нет)))
	(if (eq ?p нет) then (assert (плавление да)))
	(if (eq ?p незнаю) then (assert (плавление незнаю)))
)

(defrule Kontrol4
	(declare (salience 5))
	(плавление ?x)
	?p <- (таблица (плавление ?x))
	=>
	(retract ?p)
)

(defrule Question5 ""
	(решение нет)
	(not (окисление ?))
	(таблица (металл ?x) (окисление ?z))
	(таблица (металл ?y&~?x) (окисление ?v&~?z))
	=>
	(bind ?p (задать-вопрос "Окисляется на воздухе(серая пленка)? " да нет незнаю))
	(if (eq ?p да) then (assert (окисление нет)))
	(if (eq ?p нет) then (assert (окисление да)))
	(if (eq ?p незнаю) then (assert (окисление незнаю)))
)

(defrule Kontrol5
	(declare (salience 5))
	(окисление ?x)
	?p <- (таблица (окисление ?x))
	=>
	(retract ?p)
)

(defrule Question6 ""
	(решение нет)
	(not (тепло ?))
	(таблица (металл ?x) (тепло ?z))
	(таблица (металл ?y&~?x) (тепло ?v&~?z))
	=>
	(bind ?p (задать-вопрос "Теплопроводность выше 100 Вт/(м*К)? " да нет незнаю))
	(if (eq ?p да) then (assert (тепло нет)))
	(if (eq ?p нет) then (assert (тепло да)))
	(if (eq ?p незнаю) then (assert (тепло незнаю)))
)

(defrule Kontrol6
	(declare (salience 5))
	(тепло ?x)
	?p <- (таблица (тепло ?x))
	=>
	(retract ?p)
)

(defrule Finish1 ""
	(declare (salience 10))
	?p <- (решение нет)
	(таблица (металл ?x))
	(not (таблица (металл ?y&~?x)))
	=>
	(retract ?p)
	(printout t  crlf "Решение найдено: "  ?x crlf crlf)
)

(defrule Finish2 ""
	(declare (salience -10000))
	?p <- (решение нет)
	=>
	(retract ?p)
	(printout t  crlf "Недостаточно данных для определения металла." crlf crlf)
)