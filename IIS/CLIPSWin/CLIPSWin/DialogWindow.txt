         CLIPS (V6.24 06/15/06)
CLIPS> (deffunction задать-вопрос (?вопрос $?допустимые-значения) 
	(printout t ?вопрос) 
	(bind ?ответ (read)) 
	(if (lexemep ?ответ) 
		then (bind ?ответ (lowcase ?ответ)) 
	) 
	(while (not (member ?ответ ?допустимые-значения)) do 
		(printout t ?вопрос) 
		(bind ?ответ (read)) 
		(if (lexemep ?ответ) 
			then (bind ?ответ (lowcase ?ответ)) 
		) 
	) 
	?ответ 
) 
CLIPS>  
(deftemplate таблица 
	(slot название) 
	(slot твердость (default незнаю)) 
	(slot азот_кислота (default незнаю)) 
	(slot плотность (default незнаю)) 
	(slot плавление (default незнаю)) 
	(slot окисление (default незнаю)) 
	(slot тепло (default незнаю)) 
) 
CLIPS>  
(deffacts курорты 
	(таблица  
		(название платина) 
		(твердость нет) 
		(азот_кислота нет) 
		(плотность да) 
		(плавление нет) 
		(окисление да) 
		(тепло нет) 
	) 
	(таблица  
		(название серебро) 
		(твердость нет) 
		(азот_кислота да) 
		(плотность нет) 
		(плавление нет) 
		(окисление нет) 
		(тепло да) 
	) 
	(таблица 
		(название олово) 
		(твердость да) 
		(азот_кислота да) 
		(плотность нет) 
		(плавление да) 
		(окисление нет) 
		(тепло нет) 
	) 
	(таблица 
		(название аллюминий) 
		(твердость нет) 
		(азот_кислота да) 
		(плотность нет) 
		(плавление нет) 
		(окисление да) 
		(тепло да) 
	) 
	(таблица 
		(название свинец) 
		(твердость да) 
		(азот_кислота нет) 
		(плотность да) 
		(плавление да) 
		(окисление да) 
		(тепло нет) 
	) 
) 
CLIPS>  
(defrule Start "" 
	(declare (salience 0)) 
	(initial-fact) 
	=> 
	(set-strategy random) 
	(printout t crlf crlf) 
  	(printout t "Определение отеля") 
	(printout t crlf crlf) 
  	(printout t "Возможны ответы на вопросы: да, нет, незнаю.") 
	(printout t crlf crlf) 
	(assert (решение нет)) 
) 
CLIPS>  
(defrule Question1 "" 
	(решение нет) 
	(not (твердость ?)) 
	(таблица (название ?x) (твердость ?z)) 
	(таблица (название ?y&~?x) (твердость ?v&~?z)) 
	=> 
	(bind ?p (задать-вопрос "Царапается ногтем? " да нет незнаю)) 
	(if (eq ?p да) then (assert (твердость нет))) 
	(if (eq ?p нет) then (assert (твердость да))) 
	(if (eq ?p незнаю) then (assert (твердость незнаю))) 
) 
CLIPS>  
(defrule Kontrol1 
	(declare (salience 5)) 
	(твердость ?x) 
	?p <- (таблица (твердость ?x)) 
	=> 
	(retract ?p) 
) 
CLIPS>  
(defrule Question2 "" 
	(решение нет) 
	(not (азот_кислота ?)) 
	(таблица (название ?x) (азот_кислота ?z)) 
	(таблица (название ?y&~?x) (азот_кислота ?v&~?z)) 
	=> 
	(bind ?p (задать-вопрос "Растворима в азотной кислоте? " да нет незнаю)) 
	(if (eq ?p да) then (assert (азот_кислота нет))) 
	(if (eq ?p нет) then (assert (азот_кислота да))) 
	(if (eq ?p незнаю) then (assert (азот_кислота незнаю))) 
) 
CLIPS>  
(defrule Kontrol2 
	(declare (salience 5)) 
	(азот_кислота ?x) 
	?p <- (таблица (азот_кислота ?x)) 
	=> 
	(retract ?p) 
) 
CLIPS>  
(defrule Question3 "" 
	(решение нет) 
	(not (плотность ?)) 
	(таблица (название ?x) (плотность ?z)) 
	(таблица (название ?y&~?x) (плотность ?v&~?z)) 
	=> 
	(bind ?p (задать-вопрос "Тяжелее железа? " да нет незнаю)) 
	(if (eq ?p да) then (assert (плотность нет))) 
	(if (eq ?p нет) then (assert (плотность да))) 
	(if (eq ?p незнаю) then (assert (плотность незнаю))) 
) 
CLIPS>  
(defrule Kontrol3 
	(declare (salience 5)) 
	(плотность ?x) 
	?p <- (таблица (плотность ?x)) 
	=> 
	(retract ?p) 
) 
CLIPS>  
(defrule Question4 "" 
	(решение нет) 
	(not (плавление ?)) 
	(таблица (название ?x) (плавление ?z)) 
	(таблица (название ?y&~?x) (плавление ?v&~?z)) 
	=> 
	(bind ?p (задать-вопрос "Плавится при 500*С? " да нет незнаю)) 
	(if (eq ?p да) then (assert (плавление нет))) 
	(if (eq ?p нет) then (assert (плавление да))) 
	(if (eq ?p незнаю) then (assert (плавление незнаю))) 
) 
CLIPS>  
(defrule Kontrol4 
	(declare (salience 5)) 
	(плавление ?x) 
	?p <- (таблица (плавление ?x)) 
	=> 
	(retract ?p) 
) 
CLIPS>  
(defrule Question5 "" 
	(решение нет) 
	(not (окисление ?)) 
	(таблица (название ?x) (окисление ?z)) 
	(таблица (название ?y&~?x) (окисление ?v&~?z)) 
	=> 
	(bind ?p (задать-вопрос "Окисляется на воздухе(серая пленка)? " да нет незнаю)) 
	(if (eq ?p да) then (assert (окисление нет))) 
	(if (eq ?p нет) then (assert (окисление да))) 
	(if (eq ?p незнаю) then (assert (окисление незнаю))) 
) 
CLIPS>  
(defrule Kontrol5 
	(declare (salience 5)) 
	(окисление ?x) 
	?p <- (таблица (окисление ?x)) 
	=> 
	(retract ?p) 
) 
CLIPS>  
(defrule Question6 "" 
	(решение нет) 
	(not (тепло ?)) 
	(таблица (название ?x) (тепло ?z)) 
	(таблица (название ?y&~?x) (тепло ?v&~?z)) 
	=> 
	(bind ?p (задать-вопрос "Теплопроводность выше 100 Вт/(м*К)? " да нет незнаю)) 
	(if (eq ?p да) then (assert (тепло нет))) 
	(if (eq ?p нет) then (assert (тепло да))) 
	(if (eq ?p незнаю) then (assert (тепло незнаю))) 
) 
CLIPS>  
(defrule Kontrol6 
	(declare (salience 5)) 
	(тепло ?x) 
	?p <- (таблица (тепло ?x)) 
	=> 
	(retract ?p) 
) 
CLIPS>  
(defrule Finish1 "" 
	(declare (salience 10)) 
	?p <- (решение нет) 
	(таблица (название ?x)) 
	(not (таблица (название ?y&~?x))) 
	=> 
	(retract ?p) 
	(printout t  crlf "Решение найдено: "  ?x crlf crlf) 
) 
CLIPS>  
(defrule Finish2 "" 
	(declare (salience -10000)) 
	?p <- (решение нет) 
	=> 
	(retract ?p) 
	(printout t  crlf "Недостаточно данных для определения металла." crlf crlf) 
)Loading Selection...

[CSTRCPSR1] WARNING: Redefining deffunction: задать-вопрос

[CSTRCPSR4] Cannot redefine deftemplate таблица while it is in use.

ERROR:
(deftemplate MAIN::таблица

[CSTRCPSR1] WARNING: Redefining deffacts: курорты

[CSTRCPSR1] WARNING: Redefining defrule: Start +j

[CSTRCPSR1] WARNING: Redefining defrule: Question1 =j+j+j+j

[CSTRCPSR1] WARNING: Redefining defrule: Kontrol1 +j+j

[CSTRCPSR1] WARNING: Redefining defrule: Question2 =j+j+j+j

[CSTRCPSR1] WARNING: Redefining defrule: Kontrol2 +j+j

[CSTRCPSR1] WARNING: Redefining defrule: Question3 =j+j+j+j

[CSTRCPSR1] WARNING: Redefining defrule: Kontrol3 +j+j

[CSTRCPSR1] WARNING: Redefining defrule: Question4 =j+j+j+j

[CSTRCPSR1] WARNING: Redefining defrule: Kontrol4 +j+j

[CSTRCPSR1] WARNING: Redefining defrule: Question5 =j+j+j+j

[CSTRCPSR1] WARNING: Redefining defrule: Kontrol5 +j+j

[CSTRCPSR1] WARNING: Redefining defrule: Question6 =j+j+j+j

[CSTRCPSR1] WARNING: Redefining defrule: Kontrol6 +j+j

[CSTRCPSR1] WARNING: Redefining defrule: Finish1 =j+j+j
Defining defrule: Finish2 =j
CLIPS> 
