
;;;======================================================
;;;   Automotive Expert System
;;;
;;;     This expert system diagnoses some simple
;;;     problems with a car.
;;;
;;;     CLIPS Version 6.0 Example
;;;
;;;     To execute, merely load, reset and run.
;;;======================================================

;;****************
;;* DEFFUNCTIONS *
;;****************

(deffunction задать-вопрос (?вопрос $?допустимые-значения)
   (printout t ?вопрос)
   (bind ?ответ (read))
   (if (lexemep ?ответ) 
       then (bind ?ответ (lowcase ?ответ)))
   (while (not (member ?ответ ?допустимые-значения)) do
      (printout t ?вопрос)
      (bind ?ответ (read))
      (if (lexemep ?ответ) 
          then (bind ?ответ (lowcase ?ответ))))
   ?ответ)

(deffunction да-или-нет-п (?вопрос)
   (bind ?отклик (задать-вопрос ?вопрос да нет д н))
   (if (or (eq ?отклик да) (eq ?отклик д))
       then TRUE 
       else FALSE))

;;;**********************
;;;* двигатель STATE RULES *
;;;**********************

(defrule заключение-о-нормальном-состоянии-двигателя ""
   (declare (salience 10))
   (рабочее-состояние двигатель нормальное)
   =>
   (assert (ремонт "Нет необходимости в ремонте."))
   (assert (состояние-свечей двигатель нормальное))
   (assert (состояние-заряд аккумулятор заряженное))
   (assert (состояние-вращения двигатель вращается)))

(defrule заключение-о-неудовлетворительном-состоянии-двигателя ""
   (declare (salience 10))
   (рабочее-состояние двигатель неудовлетворительное)
   =>
   (assert (состояние-заряд аккумулятор заряженное))
   (assert (состояние-вращения двигатель вращается)))

;;;***************
;;;* QUERY RULES *
;;;***************

(defrule определить-состояние-двигателя ""
   (not (рабочее-состояние двигатель ?))
   (not (ремонт ?))
   =>
   (if (да-или-нет-п "Двигатель запущен (да/нет)? ") 
       then 
       (if (да-или-нет-п "Двигатель работает нормально (да/нет)? ")
           then (assert (рабочее-состояние двигатель нормальное))
           else (assert (рабочее-состояние двигатель неудовлетворительное)))
       else 
       (assert (рабочее-состояние двигатель не-запускается))))

(defrule определить-состояние-вращения ""
   (рабочее-состояние двигатель не-запускается)
   (not (состояние-вращения двигатель ?))
   (not (ремонт ?))   
   =>
   (if (да-или-нет-п "Ротор вращается (да/нет)? ")
       then
       (assert (состояние-вращения двигатель вращается))
       (assert (состояние-свечей двигатель нарушенное-зажигание))
       else
       (assert (состояние-вращения двигатель не-вращается))       
       (assert (состояние-свечей двигатель нет-зажигания))))

(defrule определить-засоренность ""
   (рабочее-состояние двигатель неудовлетворительное)
   (not (ремонт ?))
   =>
   (if (да-или-нет-п "Двигатель чихает (да/нет)? ")
       then (assert (ремонт "Прочистить линию подачи топлива."))))

(defrule определить-опережение-зажигания ""
   (рабочее-состояние двигатель неудовлетворительное)
   (not (ремонт ?))
   =>
   (if (да-или-нет-п "Нарушено опережение зажигания (да/нет)? ")
       then
       (assert (ремонт "Отрегулировать задержку"))       
       (assert (состояние-свечей двигатель нарушенное-зажигание)))) 

(defrule определить-стук ""
   (рабочее-состояние двигатель неудовлетворительное)
   (not (ремонт ?))
   =>
   (if (да-или-нет-п "Двигатель стучит (да/нет)? ")
       then
       (assert (ремонт "Настройка тайминга."))))

(defrule определить-малую-мощность ""
   (рабочее-состояние двигатель неудовлетворительное)
   (not (симптом двигатель малая-мощность | нет-малой-мощности))
   (not (ремонт ?))
   =>
   (if (да-или-нет-п "Мощность двигателя недостаточна (да/нет)? ")
       then
       (assert (симптом двигатель малая-мощность))
       else
       (assert (симптом двигатель нет-малой-мощности))))

(defrule определить-уровень-топлива ""
   (рабочее-состояние двигатель не-запускается)
   (состояние-вращения двигатель вращается)
   (not (ремонт ?))
   =>
   (if (not (да-или-нет-п "В баке есть топливо (да/нет)? "))
       then
       (assert (ремонт "Заправьте бак."))))

(defrule определить-состояние-аккумулятора ""
   (состояние-вращения двигатель не-вращается)
   (not (состояние-заряд аккумулятор ?))
   (not (ремонт ?))
   =>
   (if (да-или-нет-п "Аккумулятор заряжен (да/нет)? ")
       then
       (assert (состояние-заряд аккумулятор заряженное))
       else
       (assert (ремонт "Зарядите аккумулятор."))
       (assert (состояние-заряд аккумулятор незаряжен))))  

(defrule определить-состояние-поверхности-свечей ""
   (or (and (рабочее-состояние двигатель не-запускается)      
            (состояние-свечей двигатель нарушенное-зажигание))
       (симптом двигатель малая-мощность))
   (not (ремонт ?))
   =>
   (bind ?отклик 
      (задать-вопрос "Каково состояние поверхности свечей (нормальное/обгоревшее/окислившееся)? "
                    нормальное обгоревшее окислившееся))
   (if (eq ?отклик обгоревшее) 
       then 
      (assert (ремонт "Замените свечи."))
       else (if (eq ?отклик окислившееся)
                then (assert (ремонт "Почистите свечи.")))))

(defrule определить-тест-емкости ""
   (рабочее-состояние двигатель не-запускается)      
   (состояние-свечей двигатель нет-зажигания)
   (состояние-заряд аккумулятор заряженное)
   (not (ремонт ?))
   =>
   (if (да-или-нет-п "Результаты теста емкости зажигательной смеси положителен (да/нет)? ")
       then
       (assert (ремонт "Отремонтируйте распределитель."))
       else
       (assert (ремонт "Замените зажигательную смесь."))))

(defrule нет-ремонта ""
  (declare (salience -10))
  (not (ремонт ?))
  =>
  (assert (ремонт "Обратитесь к механику.")))

;;;****************************
;;;* STARTUP AND ремонт RULES *
;;;****************************

(defrule системный-баннер ""
  (declare (salience 10))
  =>
  (printout t crlf crlf)
  (printout t "Экспертная система диагностики двигателя")
  (printout t crlf crlf))

(defrule вывод-ремонта ""
  (declare (salience 10))
  (ремонт ?объект)
  =>
  (printout t crlf crlf)
  (printout t "Предлагаемый ремонт:")
  (printout t crlf crlf)
  (format t " %s%n%n%n" ?объект))

